<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='daikibo-telemetry-data' inline='true' name='federated.14egkws1tdda7x1bh58yj11rl3j5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='daikibo-telemetry-data' name='semistructpassivestore-direct.1lq2smd147d0ev14ajrld0d1ifd3'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/BIDYASHREE NAYAK/Downloads/daikibo-telemetry-data.json' filename='daikibo-telemetry-data.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[daikibo-telemetry-data.json]'>
                  <map key='data' value='true' />
                  <map key='location' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.1lq2smd147d0ev14ajrld0d1ifd3' name='daikibo-telemetry-data.json' table='[daikibo-telemetry-data.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[daikibo-telemetry-data.json].[Document Index (generated)]' />
          <map key='[area]' value='[daikibo-telemetry-data.json].[location.area]' />
          <map key='[city]' value='[daikibo-telemetry-data.json].[location.city]' />
          <map key='[country]' value='[daikibo-telemetry-data.json].[location.country]' />
          <map key='[deviceID]' value='[daikibo-telemetry-data.json].[deviceID]' />
          <map key='[deviceType]' value='[daikibo-telemetry-data.json].[deviceType]' />
          <map key='[factory]' value='[daikibo-telemetry-data.json].[location.factory]' />
          <map key='[section]' value='[daikibo-telemetry-data.json].[location.section]' />
          <map key='[status]' value='[daikibo-telemetry-data.json].[data.status]' />
          <map key='[temperature]' value='[daikibo-telemetry-data.json].[data.temperature]' />
          <map key='[timestamp]' value='[daikibo-telemetry-data.json].[timestamp]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_301A241ABA7B453285EBA8737DD92497]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data.status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>data.status</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_301A241ABA7B453285EBA8737DD92497]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data.temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temperature]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>data.temperature</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_301A241ABA7B453285EBA8737DD92497]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deviceID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[deviceID]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>deviceID</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_301A241ABA7B453285EBA8737DD92497]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deviceType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[deviceType]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>deviceType</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_301A241ABA7B453285EBA8737DD92497]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[area]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.area</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_301A241ABA7B453285EBA8737DD92497]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.city</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_301A241ABA7B453285EBA8737DD92497]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.country</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_301A241ABA7B453285EBA8737DD92497]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.factory</remote-name>
            <remote-type>130</remote-type>
            <local-name>[factory]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.factory</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_301A241ABA7B453285EBA8737DD92497]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.section</remote-name>
            <remote-type>130</remote-type>
            <local-name>[section]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.section</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_301A241ABA7B453285EBA8737DD92497]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timestamp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[timestamp]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>timestamp</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_301A241ABA7B453285EBA8737DD92497]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Unhealthy' datatype='integer' name='[Calculation_553661328996204544]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [status] = &quot;unhealthy&quot; THEN 10 ELSE 0 END' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='daikibo-telemetry-data.json' datatype='table' name='[__tableau_internal_object_id__].[daikibo-telemetry-data.json_301A241ABA7B453285EBA8737DD92497]' role='measure' type='quantitative' />
      <column caption='Area' datatype='string' name='[area]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.area</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.city</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.country</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Device ID' datatype='string' name='[deviceID]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>deviceID</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Device Type' datatype='string' name='[deviceType]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>deviceType</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.factory</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Section' datatype='string' name='[section]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.section</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>data.status</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Temperature' datatype='real' name='[temperature]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>data.temperature</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Timestamp' datatype='real' name='[timestamp]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>timestamp</run>
          </formatted-text>
        </desc>
      </column>
      <group caption='Action (Factory)' hidden='true' name='[Action (Factory)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[factory]' />
        </groupfilter>
      </group>
      <folders-common>
        <folder name='Daikibo-Telemetry-Data'>
          <folder-item name='[Document Index (generated)]' type='field' />
          <folder-item name='[deviceID]' type='field' />
          <folder-item name='[deviceType]' type='field' />
        </folder>
        <folder name='Data'>
          <folder-item name='[status]' type='field' />
        </folder>
        <folder name='Location'>
          <folder-item name='[area]' type='field' />
          <folder-item name='[city]' type='field' />
          <folder-item name='[country]' type='field' />
          <folder-item name='[factory]' type='field' />
          <folder-item name='[section]' type='field' />
        </folder>
      </folders-common>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/BIDYAS~1/AppData/Local/Temp/TableauTemp/#TableauTemp_1ucmh7r0heaovb1afuif111md4t9.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='02/22/2025 08:29:02 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Document Index (generated)]' value='[Extract].[Document Index (generated)]' />
            <map key='[area]' value='[Extract].[location.area]' />
            <map key='[city]' value='[Extract].[location.city]' />
            <map key='[country]' value='[Extract].[location.country]' />
            <map key='[deviceID]' value='[Extract].[deviceID]' />
            <map key='[deviceType]' value='[Extract].[deviceType]' />
            <map key='[factory]' value='[Extract].[location.factory]' />
            <map key='[section]' value='[Extract].[location.section]' />
            <map key='[status]' value='[Extract].[data.status]' />
            <map key='[temperature]' value='[Extract].[data.temperature]' />
            <map key='[timestamp]' value='[Extract].[timestamp]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Document Index (generated)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Document Index (generated)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Document Index (generated)</remote-alias>
              <ordinal>0</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>160704</approx-count>
              <contains-null>true</contains-null>
              <object-id>[daikibo-telemetry-data.json_301A241ABA7B453285EBA8737DD92497]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>data.status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>data.status</remote-alias>
              <ordinal>1</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_301A241ABA7B453285EBA8737DD92497]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>data.temperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[temperature]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>data.temperature</remote-alias>
              <ordinal>2</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <object-id>[daikibo-telemetry-data.json_301A241ABA7B453285EBA8737DD92497]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deviceID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deviceID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deviceID</remote-alias>
              <ordinal>3</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_301A241ABA7B453285EBA8737DD92497]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deviceType</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deviceType]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deviceType</remote-alias>
              <ordinal>4</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_301A241ABA7B453285EBA8737DD92497]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.area</remote-name>
              <remote-type>129</remote-type>
              <local-name>[area]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.area</remote-alias>
              <ordinal>5</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_301A241ABA7B453285EBA8737DD92497]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.city</remote-alias>
              <ordinal>6</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_301A241ABA7B453285EBA8737DD92497]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.country</remote-alias>
              <ordinal>7</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_301A241ABA7B453285EBA8737DD92497]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.factory</remote-name>
              <remote-type>129</remote-type>
              <local-name>[factory]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.factory</remote-alias>
              <ordinal>8</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_301A241ABA7B453285EBA8737DD92497]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.section</remote-name>
              <remote-type>129</remote-type>
              <local-name>[section]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.section</remote-alias>
              <ordinal>9</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_301A241ABA7B453285EBA8737DD92497]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>timestamp</remote-name>
              <remote-type>5</remote-type>
              <local-name>[timestamp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>timestamp</remote-alias>
              <ordinal>10</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6793</approx-count>
              <contains-null>true</contains-null>
              <object-id>[daikibo-telemetry-data.json_301A241ABA7B453285EBA8737DD92497]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='1000' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='daikibo-telemetry-data.json' id='daikibo-telemetry-data.json_301A241ABA7B453285EBA8737DD92497'>
            <properties context=''>
              <relation connection='semistructpassivestore-direct.1lq2smd147d0ev14ajrld0d1ifd3' name='daikibo-telemetry-data.json' table='[daikibo-telemetry-data.json]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_BEF5D49ED59B493FB92DD23A3E445BFC]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 1' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Downtime Per Factory</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='daikibo-telemetry-data' name='federated.14egkws1tdda7x1bh58yj11rl3j5' />
          </datasources>
          <datasource-dependencies datasource='federated.14egkws1tdda7x1bh58yj11rl3j5'>
            <column caption='Unhealthy' datatype='integer' name='[Calculation_553661328996204544]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [status] = &quot;unhealthy&quot; THEN 10 ELSE 0 END' />
            </column>
            <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>location.factory</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[factory]' derivation='None' name='[none:factory:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>data.status</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_553661328996204544]' derivation='Sum' name='[sum:Calculation_553661328996204544:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.14egkws1tdda7x1bh58yj11rl3j5].[none:factory:nk]' value='211' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='17' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14egkws1tdda7x1bh58yj11rl3j5].[sum:Calculation_553661328996204544:qk]</rows>
        <cols>[federated.14egkws1tdda7x1bh58yj11rl3j5].[none:factory:nk]</cols>
      </table>
      <simple-id uuid='{BBCEDA85-8135-4FCC-A595-27630A4449B9}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Downtime Per Machine</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='daikibo-telemetry-data' name='federated.14egkws1tdda7x1bh58yj11rl3j5' />
          </datasources>
          <datasource-dependencies datasource='federated.14egkws1tdda7x1bh58yj11rl3j5'>
            <column caption='Unhealthy' datatype='integer' name='[Calculation_553661328996204544]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [status] = &quot;unhealthy&quot; THEN 10 ELSE 0 END' />
            </column>
            <column caption='Device Type' datatype='string' name='[deviceType]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>deviceType</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>location.factory</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[deviceType]' derivation='None' name='[none:deviceType:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>data.status</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_553661328996204544]' derivation='Sum' name='[sum:Calculation_553661328996204544:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14egkws1tdda7x1bh58yj11rl3j5].[Action (Factory)]'>
            <groupfilter function='level-members' level='[factory]' user:ui-action-filter='[Action1_BEF5D49ED59B493FB92DD23A3E445BFC]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.14egkws1tdda7x1bh58yj11rl3j5].[Action (Factory)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.14egkws1tdda7x1bh58yj11rl3j5].[none:deviceType:nk]' value='97' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#72b966' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14egkws1tdda7x1bh58yj11rl3j5].[sum:Calculation_553661328996204544:qk]</rows>
        <cols>[federated.14egkws1tdda7x1bh58yj11rl3j5].[none:deviceType:nk]</cols>
      </table>
      <simple-id uuid='{07682CEB-B9F3-49A3-9379-A49022326C3A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='860' maxwidth='650' minheight='560' minwidth='420' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='48571' id='3' name='Sheet 1' w='97538' x='1231' y='1429'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='48571' id='5' name='Sheet 2' w='97538' x='1231' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='7' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97142' id='6' param='vert' type-v2='layout-flow' w='97538' x='1231' y='1429'>
                <zone fixed-size='280' h='48571' id='3' is-fixed='true' name='Sheet 1' w='97538' x='1231' y='1429'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48571' id='5' is-fixed='true' name='Sheet 2' w='97538' x='1231' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{67E71366-5843-4A5D-B4DE-E08E0FDF5F09}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14egkws1tdda7x1bh58yj11rl3j5].[none:factory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3BEE5E97-CB8F-44F5-9180-61B5C07B3488}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14egkws1tdda7x1bh58yj11rl3j5].[none:deviceType:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9D8199E2-5FB2-4C25-BCF8-E3B6E2F6F0EC}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{95E152FB-48C7-49B0-B1D9-E1BCC975C8E9}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      CIBQ1P4/8Ki7TBY3VmoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      i8N534yXaQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
